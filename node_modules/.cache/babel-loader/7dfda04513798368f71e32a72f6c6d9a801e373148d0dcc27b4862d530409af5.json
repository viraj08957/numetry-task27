{"ast":null,"code":"import toast from \"react-hot-toast\";\nimport { authenticate } from \"./helper\";\n\n// validate login page username\n\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  if (values.username) {\n    // check if user exists\n    const status = await authenticate(values.username);\n    if (status !== 200) {\n      errors.exist = toast.error(\"User does not exist\");\n    }\n  }\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidate(values) {\n  const errors = recoveryVerify({}, values);\n  return errors;\n}\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\nexport async function profileValidation(values) {\n  const errors = usernameVerify({}, values, true);\n}\nfunction recoveryVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (values.password !== values.confirmPassword) {\n    error.username = toast.error(\"Password not match ..!\");\n  }\n  return error;\n}\n\n/** ************************************************* */\n\n/** validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n//validate username\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  let profile = arguments.length > 2 ? arguments[2] : undefined;\n  // validate field of profile\n  if (profile) {\n    if (!values.firstName) {\n      error.username = toast.error(\"First Name is required...!\");\n    } else if (values.firstName.includes(\" \") || values.firstName.toLowerCase().includes(\"username\")) {\n      error.username = toast.error(\"Invalid first name...!\");\n    }\n  } //validate register field\n  else {\n    if (!values.username) {\n      error.username = toast.error(\"Username is required...!\");\n    } else if (values.username.includes(\" \") || values.username.toLowerCase().includes(\"username\")) {\n      error.username = toast.error(\"Invalid Username...!\");\n    }\n  }\n  return error;\n}\n\n/** validate email */\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","exist","error","passwordValidate","passwordVerify","resetPasswordValidate","recoveryVerify","registerValidation","emailVerify","profileValidation","password","confirmPassword","specialChars","includes","length","test","profile","firstName","toLowerCase","email"],"sources":["C:/Users/Viraj/Desktop/task 27/login-register-mern/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\"\r\nimport { authenticate } from \"./helper\"\r\n\r\n// validate login page username\r\n\r\nexport async function usernameValidate(values) {\r\n  const errors = usernameVerify({}, values)\r\n\r\n  if (values.username) {\r\n    // check if user exists\r\n    const status = await authenticate(values.username)\r\n\r\n    if (status !== 200) {\r\n      errors.exist = toast.error(\"User does not exist\")\r\n    }\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport async function passwordValidate(values) {\r\n  const errors = passwordVerify({}, values)\r\n  return errors\r\n}\r\n\r\nexport async function resetPasswordValidate(values) {\r\n  const errors = recoveryVerify({}, values)\r\n  return errors\r\n}\r\n\r\nexport async function registerValidation(values) {\r\n  const errors = usernameVerify({}, values)\r\n  passwordVerify(errors, values)\r\n  emailVerify(errors, values)\r\n\r\n  return errors\r\n}\r\n\r\nexport async function profileValidation(values) {\r\n  const errors = usernameVerify({}, values, true)\r\n}\r\n\r\nfunction recoveryVerify(error = {}, values) {\r\n  if (values.password !== values.confirmPassword) {\r\n    error.username = toast.error(\"Password not match ..!\")\r\n  }\r\n  return error\r\n}\r\n\r\n/** ************************************************* */\r\n\r\n/** validate password */\r\nfunction passwordVerify(errors = {}, values) {\r\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\r\n\r\n  if (!values.password) {\r\n    errors.password = toast.error(\"Password Required...!\")\r\n  } else if (values.password.includes(\" \")) {\r\n    errors.password = toast.error(\"Wrong Password...!\")\r\n  } else if (values.password.length < 4) {\r\n    errors.password = toast.error(\r\n      \"Password must be more than 4 characters long\"\r\n    )\r\n  } else if (!specialChars.test(values.password)) {\r\n    errors.password = toast.error(\"Password must have special character\")\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\n//validate username\r\nfunction usernameVerify(error = {}, values, profile) {\r\n  // validate field of profile\r\n  if (profile) {\r\n    if (!values.firstName) {\r\n      error.username = toast.error(\"First Name is required...!\")\r\n    } else if (\r\n      values.firstName.includes(\" \") ||\r\n      values.firstName.toLowerCase().includes(\"username\")\r\n    ) {\r\n      error.username = toast.error(\"Invalid first name...!\")\r\n    }\r\n  } //validate register field\r\n  else {\r\n    if (!values.username) {\r\n      error.username = toast.error(\"Username is required...!\")\r\n    } else if (\r\n      values.username.includes(\" \") ||\r\n      values.username.toLowerCase().includes(\"username\")\r\n    ) {\r\n      error.username = toast.error(\"Invalid Username...!\")\r\n    }\r\n  }\r\n  return error\r\n}\r\n\r\n/** validate email */\r\nfunction emailVerify(error = {}, values) {\r\n  if (!values.email) {\r\n    error.email = toast.error(\"Email Required...!\")\r\n  } else if (values.email.includes(\" \")) {\r\n    error.email = toast.error(\"Wrong Email...!\")\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    error.email = toast.error(\"Invalid email address...!\")\r\n  }\r\n\r\n  return error\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}